{"version":3,"sources":["fetchImages.js","index.js"],"names":["KEY","BASE_URL","FetchImages","constructor","query","getImages","fetch","then","response","json","data","searchName","newQuery","refs","input","document","querySelector","searchForm","imgBox","fetchImages","onSearch","e","preventDefault","currentTarget","elements","searchQuery","value","trim","innerHTML","console","log","addGallery","markup","map","item","webformatURL","tags","likes","views","comments","downloads","gallery","insertAdjacentHTML","error","addEventListener"],"mappings":";;;AAGiC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHjC,MAAMA,EAAM,qCACNC,EAAW,0BAEF,MAAMC,EACjBC,cACSC,KAAAA,MAAQ,GAQjBC,YACWC,OAAAA,SAASL,UAAiBD,OAAS,KAAKI,iEAC9CG,KAAKC,GAAYA,EAASC,QAC1BF,KAAMG,GAEAA,GAIPC,iBACO,OAAA,KAAKP,MAGZO,eAAWC,GACNR,KAAAA,MAAQQ,GAxBY,QAAA,QAAA;;ACqDhC,aAxDD,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,kBAuDC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtDD,MAAMC,EAAO,CACTC,MAAOC,SAASC,cAAc,wBAC9BC,WAAYF,SAASC,cAAc,gBACnCE,OAAQH,SAASC,cAAc,aAE7BG,EAAc,IAAIjB,EAAJ,QAKpB,SAASkB,EAASC,GAEdA,EAAEC,iBACFH,EAAYR,WAAaU,EAAEE,cAAcC,SAASC,YAAYC,MAAMC,OACpEd,EAAKK,OAAOU,UAAY,GAEO,KAA3BT,EAAYR,aACZkB,QAAQC,IAAIX,EAAYR,YACxBQ,EAAYd,UAAUc,EAAYR,YAAYJ,KAAKG,IAC/CqB,EAAWrB,MAKvB,eAAeqB,EAAWrB,GACnB,IACCmB,QAAQC,IAAI,eAAgBpB,GACtBsB,MAAAA,QAAetB,EAAKuB,IAAKC,sDAEfA,EAAKC,sBAAsBD,EAAKE,oHAGnCF,EAAKG,0FAGLH,EAAKI,0FAGLJ,EAAKK,6FAGLL,EAAKM,2EAOXC,OAFPZ,QAAQC,IAAIE,SACUnB,EAAKK,OAAOwB,mBAAmB,YAAaV,GAGtE,MAAOW,GACHd,QAAQC,IAAIa,IA3CpB9B,EAAKI,WAAW2B,iBAAiB,SAAUxB","file":"src.ce9f4b42.js","sourceRoot":"../src","sourcesContent":["const KEY = '24739758-4c739ca612149bb371b205192';\nconst BASE_URL = 'https://pixabay.com/api';\n\nexport default class FetchImages {\n    constructor(){\n        this.query = '';\n    }\n\n    // async getImages() {\n    //     const getImg = await fetch(`${BASE_URL}/?key=${KEY}&q=${this.query}&image_type=photo&orientation=horizontal&safesearch=true`);\n    //     const imgForGallery = await getImg.json();\n    //     return imgForGallery;\n    // }\n    getImages(){\n        return fetch(`${BASE_URL}/?key=${KEY}&q=${this.query}&image_type=photo&orientation=horizontal&safesearch=true`)\n        .then(response => response.json())\n        .then((data) => {\n        \n        return data;\n      });\n    }\n\n    get searchName() {\n        return this.query;\n    }\n    \n    set searchName(newQuery) {\n        this.query = newQuery;\n    }\n}","import './css/styles.css';\nimport FetchImages from './fetchImages';\nconst refs = {\n    input: document.querySelector('[name=\"searchQuery\"]'),\n    searchForm: document.querySelector('.search-form'),\n    imgBox: document.querySelector('.gallery'),\n}\nconst fetchImages = new FetchImages();\n// let query = '';\n\nrefs.searchForm.addEventListener('submit', onSearch)\n\nfunction onSearch(e){\n   \n    e.preventDefault()\n    fetchImages.searchName = e.currentTarget.elements.searchQuery.value.trim();\n    refs.imgBox.innerHTML = '';\n   \n    if (fetchImages.searchName !== \"\"){\n        console.log(fetchImages.searchName)\n        fetchImages.getImages(fetchImages.searchName).then(data => {\n            addGallery(data)\n        })     \n    }\n}\n\nasync function addGallery(data){\n    try{\n        console.log('data inside:', data )\n        const markup = await data.map((item) => {\n            return `<div class=\"photo-card\">\n            <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" loading=\"lazy\" />\n            <div class=\"info\">\n              <p class=\"info-item\">\n                <b>${item.likes}</b>\n              </p>\n              <p class=\"info-item\">\n                <b>${item.views}</b>\n              </p>\n              <p class=\"info-item\">\n                <b>${item.comments}</b>\n              </p>\n              <p class=\"info-item\">\n                <b>${item.downloads}</b>\n              </p>\n            </div>\n          </div>`\n        });\n        console.log(markup)\n        const gallery = await refs.imgBox.insertAdjacentHTML(\"beforeend\", markup);\n        return gallery;\n    }\n    catch (error){\n        console.log(error)\n    }\n     \n}\n\n\n\n\n"]}